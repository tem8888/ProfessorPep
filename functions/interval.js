const config = require('../config.js');
const congrat = require('../quiz/congrat.js');
const GuildModel = require('../models/guild.js');
let k; 

async function interval(msg, hintArray, qNum) {
	if (!hintArray) {
        clearInterval(questionInProgress);
        return;
    }
 let randCongrat = Math.floor(Math.random() * 5) + 1;
 let promise = new Promise((resolve, reject) => {
    hint = 0;
    GuildModel.findOne({idGuild: msg.guild.id}).then( async (guild) => {
        questionInProgress = setInterval(() => {
            if (hintArray[hint]) {
               msg.channel.send(`> \` –ü–æ–¥—Å–∫–∞–∑–∫–∞ ‚Ññ${hint+1}: \`   ${hintArray[hint]}`);
               hint += 1;
           } else { 
                clearInterval(questionInProgress); 
                if (qNum) k = 1;        // –°—á–µ—Ç—á–∏–∫ –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
                resolve(false);
            }

        }, guild.hintTime);
    });

});

    questionInProgress = await promise;
    if (qNum) return k;
/*
    if (k >= qNum) { qNum = 0, k = 0; } // –µ—Å–ª–∏ —Ç—É—Ä–Ω–∏—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –≤—ã–∫–ª—é—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
  //  if (k > 0) k = 0; // –æ–±–Ω—É–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º
    console.log('k2 = '+k+', qNumber2 = '+qNum);
    if (!qNum) { // –µ—Å–ª–∏ —Ç—É—Ä–Ω–∏—Ä–∞ –Ω–µ—Ç –∏ –æ—Ç–≤–µ—Ç –Ω–µ —É–≥–∞–¥–∞–Ω
        msg.channel.send(`${congrat.noAnswer[`${randCongrat}`]} **${answer}**`);
        let noAnswerVote = await msg.channel.send(`–ì–æ –¥–∞–ª—å—à–µ?`);
        await noAnswerVote.react('üÜó');

    } else { // –µ—Å–ª–∏ —Ç—É—Ä–Ω–∏—Ä –µ—Å—Ç—å –∏ –æ—Ç–≤–µ—Ç –Ω–µ —É–≥–∞–¥–∞–Ω
        msg.channel.send(`${congrat.noAnswer[`${randCongrat}`]} **${answer}**`);
        if (k < qNum) { // –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å –≤ —Ç—É—Ä–Ω–∏—Ä–µ
            msg.channel.send(`–í—ã–±–∏—Ä–∞—é –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å üôá‚Äç‚ôÇÔ∏è`);
            setTimeout(async function(){ 
                let skipNext = await msg.channel.send('!—Å–ª–µ–¥');
                await skipNext.delete();
                return k; // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ 
            }, 1500); 
        }
    }
*/
};

module.exports = {
  interval
};