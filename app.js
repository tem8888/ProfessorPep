const Discord = require('discord.js');
const client = new Discord.Client();
const pool = require ('./clientpool.js'); 
var points_write = require ('./points.js');  
const config = require('./config.js');
const questions_amount = 120000;
const fs = require('fs');

let answer; let exercise; let question; let randm; let new_name_2 = []; let check; let lines; let timerId;
let hint; let len; let points; let total_points; let firstAnswer; let qNumber; let k;
pool.on('error', (err, client) => {
  console.error('Unexpected error on idle client', err)
  process.exit(-1)
})

client.on('ready', () => {
  console.log(`Logged in as ${client.user.tag}!`);
  client.user.setActivity('–í–∏–∫—Ç–æ—Ä–∏–Ω—É');
  pool.connect( (err, client, done) => {
    if(err) throw err; 
            client.query('create table if not exists quiz( \
                id text primary key, \
                name text, \
                count integer default 0, \
                points integer default 0)', (err, result) => {
                    //disconnent from database on error
            });
            client.query('create table if not exists quiz_tournament( \
                id text primary key, \
                name text, \
                count integer default 0, \
                points integer default 0)', (err, result) => {
                    //disconnent from database on error
            });
            client.query('create table if not exists guild_settings( \
                id_guild text primary key, \
                id_channel text default 0, \
                time_to_hint integer default 4000)', (err, result) => {
                    //disconnent from database on error
            });
            });
  pool.connect(err => {
  if(err) throw err; 
  console.log('Connected to PostgresSQL'); });

 });

var stringSimilarity = require('string-similarity');
let fullData = fs.readFileSync(config.url_file, 'utf8').split('\n');
//---------------------
// CLIENT.ON MESSAGE =>
//---------------------
client.on("message", (message) => {

    if (message.author.bot) return
    if (message.channel.id != config.channel) return
    let messageArray = message.content.split(/\s+/g);
    let command = messageArray[0];
    let args = messageArray.slice(config.prefix.length)

  /****************** –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥ ********************/

    if (command.startsWith(config.prefix)) {
      cmd = client.commands.get(command.slice(config.prefix.length))
      if ((cmd) && (cmd.help.name == '—Å–ª–µ–¥') && (!timerId) ) {
          firstAnswer = true;
          randm = Math.floor(Math.random() * (fullData.length-1)); // -1 –∏–∑-–∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–∞–π–ª–µ
          quizLine = fullData[randm].split('|'); // —Å—Ç—Ä–æ–∫–∞-–º–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å|–æ—Ç–≤–µ—Ç
          question = quizLine[0]; // –≤–æ–ø—Ä–æ—Å
          answer = quizLine[1]; // –æ—Ç–≤–µ—Ç
          cmd.run(client, message, randm, quizLine, question, answer)
          timerId = true; 
      }
      else if (cmd) cmd.run(client, message)
      else return
    }
        
/****************** –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–æ–≤ ********************/
    if (answer) {
        check = stringSimilarity.compareTwoStrings(message.content.toLowerCase(), answer.toLowerCase()); 
    }

/****************** –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –≤–µ—Ä–µ–Ω - –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤ ********************/
    if ((check == 1) && (message.author.bot == false) && (firstAnswer)) {
  //&& (!qNumber) –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞
        points_write.run(client, message, cmd, answer);
        timerId = false; 
        firstAnswer = false;

     /*   setTimeout(async function(){ 
            let next = await message.channel.send('!—Å—Ç–∞—Ä—Ç');
            await next.delete();
        }, 2500);*/
      
    }

});

client.on('guildMemberAdd', member => {
    const msg = member.guild.channels.get('370921566873059328');
    msg.send({embed:{
    color: 16777215,
    title: "–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!",
    url: "https://fmfan.ru",
    description: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <@" + member.user.id + ">! –î–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ —é–Ω–∏–æ—Ä—Å–∫–∏–π —Å–æ—Å—Ç–∞–≤, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å –∏ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à –æ–ø—ã—Ç –∏–≥—Ä—ã –≤ FM –≤ –æ–¥–∏–Ω–æ—á–Ω–æ–π –∏, –µ—Å–ª–∏ –µ—Å—Ç—å, —Å–µ—Ç–µ–≤–æ–π –∏–≥—Ä–µ. –ü—Ä–æ—Å—å–±–∞ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–∞–Ω–∞–ª–µ <#502769170400673792>",
    thumbnail: {
      "url": "https://media.giphy.com/media/d2r5afIHy34mWTM8r4/giphy.gif"
    },
    timestamp: new Date(),
    footer: {
      icon_url: client.user.avatarURL,
      text: "–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ üôÇ"
    }
 }});
 });
client.login(process.env.BOT_TOKEN);
